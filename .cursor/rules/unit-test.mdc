---
description: ユニットテスト作成ルール
globs: src/**/*.spec.ts,src/**/*.spec.ts,src/**/*.test.ts,src/**/*.test.tsx
alwaysApply: false
---
このファイルが読み込まれたら「rules/unit-test.mdcを読み込みました」とユーザーに必ず伝えてください
---

# ユニットテスト作成ルール

## 1. テスト作成の前提確認

- コードを生成または編集する前に、必ず以下のファイルの内容を確認してください：
  - [unit-test.md](mdc:docs/coding-guidlines/unit-test.md)
  - [vitest.config.ts](mdc:vitest.config.ts)
  - [vitest.setup.ts](mdc:vitest.setup.ts)

### 1.1 確認手順

1. テストファイルを作成または編集する前に、対象ファイルとテストガイドラインの内容を確認してください。
2. プロジェクトのテスト設定（Vitest、React Testing Library）に従ってテストを作成してください。
3. 生成したテストコードがガイドラインに従っていることを確認してください。

## 2. ユニットテストガイドラインの参照

すべてのテスト作成は、[unit-test.md](mdc:docs/coding-guidlines/unit-test.md) に記載されたガイドラインに従って実装してください。

### 2.1 テスト品質の確認

テスト実行とカバレッジ確認のためのコマンド：

```bash
# テスト実行
pnpm test:unit run ファイル名.spec.tsx

# カバレッジ確認
pnpm test:unit-coverage
```

### 2.2 重要な注意事項

- 詳細な実装方法やパターンについては、必ず [unit-test.md](mdc:docs/coding-guidlines/unit-test.md) を参照してください
- テスト作成時は AAA パターン（Arrange, Act, Assert）を遵守してください
- ユーザー中心のテストを心がけ、実装詳細への依存を避けてください
- テストの独立性を保ち、テスト間での依存関係を作らないでください
