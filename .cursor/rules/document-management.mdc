---
description: 
globs: 
alwaysApply: false
---
- このファイルが読み込まれたら「document-management.mdcを読み込みました」とユーザーに必ず伝えてください。
---

# ドキュメント管理・自動更新ルール

## 1. 適用範囲と対象ファイル

このルールは以下のファイル・ディレクトリに対するAIによる自動更新を管理します：

### 1.1 プロジェクトルートファイル
- [README.md](mdc:README.md) - プロジェクトのメインドキュメント

### 1.2 Cursorルールファイル
- `.cursor/rules/` 配下の全 `.mdc` ファイル
  - コード品質保証、ユニットテスト、グローバルルール、アクセシビリティガイドライン等

### 1.3 コーディングガイドライン
- `docs/coding-guidlines/` 配下の全 `.md` ファイル
  - 技術スタック仕様、ディレクトリ構造、コーディング規約、ユニットテスト規約、リリースプロセス等

### 1.4 プロジェクトガイドライン
- `docs/project-guidlines/` 配下の全 `.md` ファイル
  - プロジェクト固有のガイドライン、運用ルール等

## 2. ドキュメント更新時の必須承認プロセス

### 2.1 更新前の必須確認事項
ドキュメントファイル（.mdc、.mdファイル）を更新する前に、以下を必ず実行してください：

1. **変更理由の明確化**
   - 更新が必要な理由を具体的に説明する
   - 変更による影響範囲を特定する
   - 関連する他のドキュメントへの影響を評価する

2. **変更内容の詳細説明**
   - 追加・変更・削除する内容を明確に示す
   - 変更前後の差分を明示する
   - 変更により解決される問題や改善点を説明する

### 2.2 ユーザー承認の必須取得
以下の場合は必ずユーザーの明示的な承認を得てから実行してください：

```
🔒 ユーザー承認が必要な操作
- .mdc ファイルの新規作成・更新・削除
- .md ファイルの新規作成・更新・削除
- README.md の更新
- 技術スタックやバージョン情報の変更
- プロジェクト構造に関する記述の変更
- コーディング規約の変更
- リリースプロセスの変更
- 新規ドキュメントディレクトリの作成
```

### 2.3 承認取得の手順
1. **変更提案の提示**
   ```
   ## ドキュメント更新の承認をお願いします
   
   **対象ファイル**: [ファイル名またはディレクトリパターン]
   **変更理由**: [理由]
   **変更内容**: 
   - [具体的な変更内容]
   
   **影響範囲**: [他のファイルやプロセスへの影響]
   
   この変更を実行してよろしいですか？
   ```

2. **承認確認**
   - ユーザーから明示的な「承認」「OK」「実行してください」等の返答を得る
   - 承認なしでの実行は禁止

3. **変更実行後の報告**
   - 実行した変更内容の要約
   - 変更されたファイルの一覧
   - 必要に応じた次のアクションの提案

## 3. ドキュメント更新の品質管理

### 3.1 一貫性の保持
- プロジェクト全体のドキュメント間で一貫性を保つ
- 用語集や表記ルールに従う
- 既存のフォーマットやスタイルを維持する
- ディレクトリ構造に応じた適切な分類

### 3.2 最新性の維持
- 技術スタックの変更時は関連ドキュメントも同期更新する
- package.json の変更時は `docs/coding-guidlines/technology-stack.md` を更新する
- プロジェクト構造の変更時は `docs/coding-guidlines/directory-structure.md` を更新する
- 新機能追加時は該当するガイドライン文書を更新する

### 3.3 参照整合性の確保
- ファイル間のリンクが正しく機能することを確認する
- mdc参照（[ファイル名](mdc:パス)）の正確性を保つ
- 存在しないファイルへの参照を防ぐ
- ディレクトリ移動時の参照更新

## 4. 自動更新のトリガー条件

以下の変更が発生した場合、関連ドキュメントの更新を検討してください：

### 4.1 技術的変更
- package.json の依存関係変更
- 新しい設定ファイルの追加
- ディレクトリ構造の変更
- 新しい開発ツールの導入
- `.cursor/rules/` 配下への新ルール追加

### 4.2 プロセス変更
- 開発フローの変更
- テスト手順の変更
- デプロイプロセスの変更
- コード品質チェックの変更
- 新しいガイドラインの策定

### 4.3 機能追加・変更
- 新機能の追加
- 既存機能の大幅な変更
- APIの変更
- 設定方法の変更
- プロジェクト構成の変更

## 5. 緊急時の例外対応

### 5.1 緊急修正が必要な場合
以下の場合のみ、事後承認での更新を許可します：
- セキュリティ上の重大な問題の修正
- サービス停止を招く重大なバグの修正
- 法的要件への対応

### 5.2 事後承認の手順
1. 緊急修正の実行
2. 即座にユーザーへの報告
3. 修正理由と内容の詳細説明
4. 事後承認の取得

## 6. 禁止事項

以下の行為は明示的に禁止します：

- ユーザー承認なしでのドキュメント更新
- 一度に大量のドキュメントを無承認で変更
- 重要な情報の削除（バックアップなし）
- 他のドキュメントとの整合性を無視した変更
- 技術スタックのバージョン変更を伴う更新（特別承認が必要）
- ディレクトリ構造を無視したファイル配置

## 7. 更新履歴の管理

### 7.1 変更ログの記録
重要な変更については以下を記録してください：
- 変更日時
- 変更者（AI）
- 変更理由
- 変更内容の要約
- 承認者（ユーザー）
- 影響を受けたファイル・ディレクトリ

### 7.2 定期的な整合性チェック
- 月次でドキュメント間の整合性を確認
- リンク切れやファイル参照エラーの確認
- 技術情報の最新性チェック
- ディレクトリ構造の妥当性確認

---

**重要**: このルールに従い、ドキュメントの品質と整合性を保ちながら、プロジェクトの成長に合わせた適切な更新を行います。不明な点がある場合は、必ずユーザーに確認を求めてください。
